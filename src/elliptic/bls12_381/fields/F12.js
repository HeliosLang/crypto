import { FieldWithOps, QuadraticFieldExt } from "../../common/index.js"
import { F2 } from "./F2.js"
import { F6 } from "./F6.js"

/**
 * @typedef {[
 *   [[bigint,bigint], [bigint,bigint], [bigint, bigint]],
 *   [[bigint,bigint], [bigint,bigint], [bigint, bigint]],
 * ]} FieldElement12
 */

/**
 * @type {[bigint, bigint][]}
 */
const UPOWP = [
    [1n, 0n], // 0
    [
        3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n,
        151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n
    ], // 1
    [
        793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351n,
        0n
    ], // 2
    [
        2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n,
        1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n
    ], // 3
    [
        793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,
        0n
    ], // 4
    [
        3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n,
        877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n
    ], // 5
    [
        4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786n,
        0n
    ], // 6
    [
        151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n,
        3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n
    ], // 7
    [
        4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,
        0n
    ], // 8
    [
        1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n,
        2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n
    ], // 9
    [
        4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437n,
        0n
    ], // 10
    [
        877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n,
        3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n
    ] // 11
]

/**
 * @extends {FieldWithOps<FieldElement12>}
 */
class FieldWithConjugateAndPowp extends FieldWithOps {
    constructor() {
        super(new QuadraticFieldExt(F6, [F2.ZERO, F2.ONE, F2.ZERO]))
    }

    /**
     * @param {FieldElement12} a
     * @returns {FieldElement12}
     */
    conjugate([ax, ay]) {
        return [ax, F6.negate(ay)]
    }

    /**
     * Calculates (a + b*u)^(p^n)
     * Using a combination of Fermat's little theorem and substitutions of u^2
     * This is often referred to as the Frobenius endomorphism, and is used during the pairing calculation
     * @param {FieldElement12} a
     * @param {number} n
     * @returns {FieldElement12}
     */
    powp([a, b], n) {
        const [bx, by, bz] = F6.powp(b, n)
        const upn = UPOWP[n % 12]

        return [
            F6.powp(a, n),
            [F2.multiply(bx, upn), F2.multiply(by, upn), F2.multiply(bz, upn)]
        ]
    }

    /**
     * @param {FieldElement12} a
     * @param {[bigint, bigint]} b
     * @returns {FieldElement12}
     */
    multiplyF2([ax, ay], b) {
        return [F6.multiplyF2(ax, b), F6.multiplyF2(ay, b)]
    }
}

export const F12 = new FieldWithConjugateAndPowp()
